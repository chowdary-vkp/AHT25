#include "AHT25.h"
#include "stm32f4xx_hal.h"

float AHT25_relative_humidity, AHT25_temperature;

void AHT25_init()
{
  uint8_t init = AHT25_initialization;
  HAL_I2C_Master_Transmit(&hi2c1, AHT25_device_address | I2C_write, &init, 1, 50);
}

void AHT25_read_data()
{
  uint8_t data[3] = { AHT25_measurement_trigger, 0b00110011, 0b00000000 };
  uint8_t received_data[6];
  HAL_I2C_Master_Transmit(&hi2c1, AHT25_device_address | I2C_write, &data[0], 3, 50);
  HAL_I2C_Master_Receive(&hi2c1, AHT25_device_address | I2C_read, &received_data[0], 6, 50);

  const uint32_t constant = 1400000;

  uint32_t humidity_bytes = (((uint32_t)received_data[4]) << 12) + (((uint32_t)received_data[3]) << 4) + (((uint32_t)received_data[2] & 0b11110000) >> 4);
  AHT25_relative_humidity = ((float)humidity_bytes / (float)constant) * 100.0f;

  uint32_t temperature_bytes = ((uint32_t)(received_data[2] & 0b00001111) << 16) + ((uint32_t)received_data[1] << 8) + (uint32_t)received_data[0];
  AHT25_temperature = (((float)temperature_bytes / (float)constant ) * 200.0f) - 50.0f;
}

int main()
{
  HAL_Init();

  // Initialize I2C
  I2C_HandleTypeDef hi2c1;
  hi2c1.Instance = I2C1;
  hi2c1.Init.ClockSpeed = 100000;
  hi2c1.Init.Mode = I2C_Mode_Master;
  hi2c1.Init.OwnAddress1 = 0;
  hi2c1.Init.Address1Mask = 0;
  HAL_I2C_Init(&hi2c1);

  // Initialize AHT25 sensor
  AHT25_init();

  while (1)
  {
    // Read temperature and humidity from sensor
    AHT25_read_data();

    // Print temperature and humidity to serial port
    printf("Temperature: %.2f degrees Celsius\n", AHT25_temperature);
    printf("Humidity: %.2f %%\n", AHT25_relative_humidity);

    HAL_Delay(1000);
  }
}
