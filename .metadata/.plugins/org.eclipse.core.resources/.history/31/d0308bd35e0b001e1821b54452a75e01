#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include "stm32f4xx.h"

    float temperature;
    float humidity;

#define I2C_BUS 1       // Use I2C bus 1
#define AHT25_ADDR 0x38 // Address of the AHT25 sensor

// I2C device handle
I2C_HandleTypeDef hi2c1;

// AHT25 commands
#define AHT25_INIT_CMD 0xE1
#define AHT25_MEASURE_CMD 0xAC

// Read the temperature and humidity values from the AHT25 sensor
void read_sensor_values(float *temperature, float *humidity)
{
    uint8_t data[6];
    HAL_I2C_Master_Transmit(&hi2c1, AHT25_ADDR, (uint8_t*)AHT25_MEASURE_CMD, 1, 100);
    HAL_I2C_Master_Receive(&hi2c1, AHT25_ADDR, data, 6, 100);
    *humidity = ((float)((data[1] << 12) | (data[2] << 4) | (data[3] >> 4))) / 1048576.0 * 100.0;
    *temperature = ((float)(((data[3] & 0x0F) << 16) | (data[4] << 8) | data[5])) / 1048576.0 * 200.0 - 50.0;
}

int main()
{
    // Initialize I2C bus and device
    HAL_I2C_Init(&hi2c1);

    // Initialize the AHT25 sensor
    HAL_I2C_Master_Transmit(&hi2c1, AHT25_ADDR, (uint8_t*)AHT25_INIT_CMD, 1, 100);

    // Read sensor values

    // Fix the error by taking the address of the temperature variable
    float *temperature_ptr = &temperature;

    read_sensor_values(temperature_ptr, &humidity);

    // Print the temperature and humidity
    printf("Temperature: %.2f Â°C\n", temperature);
    printf("Humidity: %.2f %%\n", humidity);

    // Clean up and exit
    HAL_I2C_DeInit(&hi2c1);
    return 0;
}
